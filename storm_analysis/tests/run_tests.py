#!/usr/bin/env python
#
# Run tests of various components of this project. Depending
# on the speed of your computer this could take a few minutes
# to run.
#
# Hazen 08/2016
#

import os
import subprocess

# 3D-DAOSTORM
import storm_analysis.daostorm_3d.mufit_analysis as mufitAnalysis
dao_analysis = mufitAnalysis.analyze

# FRC
import storm_analysis.frc.frc_calc2d as frcCalc2d

# L1H
import storm_analysis.L1H.setup_A_matrix as setupAMatrix
import storm_analysis.L1H.cs_analysis as csAnalysis

# RCC
import storm_analysis.rcc.rcc_drift_correction as rccDriftCorrection

# sCMOS
import storm_analysis.sCMOS.scmos_analysis as scmosAnalysis
scmos_analysis = scmosAnalysis.analyze


#
# Output filenames are in lists so that we know to delete them
# (if they exist) before running the analysis.
#
test_args = [
#    ["Testing 3D-DAOSTORM"],
#    [dao_analysis, "test.dax", ["test_3d_2d_fixed.bin"], "test_3d_2d_fixed.xml"],
#    [dao_analysis, "test_low_snr.dax", ["test_3d_2d_fixed_low_snr.bin"], "test_3d_2d_fixed_low_snr.xml"],
#    [dao_analysis, "test.dax", ["test_3d_2d.bin"], "test_3d_2d.xml"],
#    [dao_analysis, "test.dax", ["test_3d_3d.bin"], "test_3d_3d.xml"],
#    [dao_analysis, "test.dax", ["test_3d_Z.bin"], "test_3d_Z.xml"],
#    ["Testing FRC"],
#    [frcCalc2d.frcCalc2d, "test_drift_mlist.bin", False],
#    ["Testing L1H"],
#    [setupAMatrix.setupAMatrix, "theoritical", ["test_l1h", "test_l1h_a7_k5_i8_o8_p8_4.amat", "ia_matrix.dax", "ia_matrix.inf"], 1.0, False],
#    [csAnalysis.analyze, "test_l1h.dax", "test_l1h.xml", ["test_l1h.hres"], ["test_l1h_list.bin"]],
    ["Testing RCC"],
    [rccDriftCorrection.rccDriftCorrection, "test_drift_mlist.bin", ["test_drift.txt"], 2000, 1, True],
#    ["Testing Rolling Ball Background Subtraction"],
#    ["../rolling_ball_bgr/rolling_ball.py", "test_bg_sub.dax", "test_bg_sub_rb.dax", "10", "1"],
#    ["Testing sCMOS"],
#    [scmos_analysis, "test.dax", ["test_sc_2d_fixed.bin"], "test_sc_2d_fixed.xml"],
#    [scmos_analysis, "test.dax", ["test_sc_2d.bin"], "test_sc_2d.xml"],
#    [scmos_analysis, "test.dax", ["test_sc_3d.bin"], "test_sc_3d.xml"],
#    [scmos_analysis, "test.dax", ["test_sc_Z.bin"], "test_sc_Z.xml"],
#    ["Testing Spliner"],
#    ["../spliner/measure_psf.py", "test_spliner.dax", "none", "test_spliner_olist.bin", "test_spliner_psf.psf", "1"],
#    ["../spliner/psf_to_spline.py", "test_spliner_psf.psf", "test_spliner_psf.spline", "10"],
#    [spliner_exe, "test_spliner.dax", "test_spliner_slist.bin", "test_spliner_dh.xml"],
#    [spliner_exe, "test_spliner.dax", "test_spliner_flist.bin", "test_spliner_dh_fista.xml"],
#    ["Testing Track/Average/Correct"],
#    ["../sa_utilities/track_average_correct.py", "test_drift_mlist.bin", "test_drift_alist.bin", "test_drift.xml"],
    
    # This is out of alphabetical order because it needs the alist.bin file generated by track_average_correct.py
#    ["Testing DBSCAN Clustering"],
#    ["../dbscan/dbscan_analysis.py", "test_drift_alist.bin", "0"],
#    ["../dbscan/cluster_images.py", "test_drift_aclusters_list.bin", "DBSCAN Clustering", "50", "20", "test_drift_dbscan"],
#    ["Testing Voronoi Clustering"],
#    ["../voronoi/voronoi_analysis.py", "test_drift_alist.bin", "1.25", "./"],
#    ["../dbscan/cluster_images.py", "test_drift_asrt_list.bin", "Voronoi Clustering", "50", "20", "test_drift_vr"],
#    ["Testing Wavelet Background Subtraction"],
#    ["../wavelet_bgr/wavelet_bgr.py", "test_bg_sub.dax", "test_bg_sub_wbgr.dax", "db4", "2", "2", "10"]
]


#
# Run tests.
#
for arg in test_args:
    if (len(arg) == 1):
        print("")
        print(arg[0])
        print("")
    else:
        test_params = []
        for param in arg[1:]:

            # Check if this is an output file that should be deleted.
            if isinstance(param, list):
                for fname in param:
                    try:
                        os.remove(fname)
                    except OSError:
                        pass
                test_params.append(param[0])
            else:
                test_params.append(param)
                
        arg[0](*test_params)

